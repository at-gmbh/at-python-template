[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "proprietary"
packages = [{ include = "{{ cookiecutter.module_name }}", from = "src" }, ]
include = ["src/{{ cookiecutter.module_name }}/res/*"]
{% if cookiecutter.create_cli == "yes" %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.module_name }}.main:app"{% endif %}

[tool.poetry.dependencies]
python = "^3.9"{% if cookiecutter.config_file == 'hocon' %}
pyhocon = "^0.3.61"{% elif cookiecutter.config_file == 'yaml' %}
PyYAML = "^6.0.2"{% endif %}{% if cookiecutter.create_cli == 'yes' %}
typer = "^0.15.1"{% endif %}

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"

[tool.poetry.group.linter.dependencies]{% if cookiecutter.code_formatter == 'black' %}
black = "^25.1.0"{% else %}
ruff = "^0.9.7"{% endif %}
isort = "^6.0.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"{% if cookiecutter.use_notebooks == 'yes' %}
jupyterlab = "^4.3.5"{% endif %}
{% if cookiecutter.code_formatter != 'black' %}
[tool.ruff]
line-length = 100
src = ["src", "tests"]
ignore = ["F401"]
{% endif %}
[tool.isort]{% if cookiecutter.code_formatter == 'black' %}
profile = "black"{% else %}
py_version = 310
line_length = 100
multi_line_output = 3{% endif %}

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
