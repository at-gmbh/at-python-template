[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "proprietary"
packages = [{ include = "{{ cookiecutter.module_name }}", from = "src" }, ]
include = ["src/{{ cookiecutter.module_name }}/res/*"]
{% if cookiecutter.create_cli == "yes" %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.module_name }}.main:app"{% endif %}

[tool.poetry.dependencies]
python = "^3.11"{% if cookiecutter.config_file == 'hocon' %}
pyhocon = "^0.3.59"{% elif cookiecutter.config_file == 'yaml' %}
PyYAML = "^6.0"{% endif %}{% if cookiecutter.create_cli == 'yes' %}
typer = {extras = ["all"], version = "^0.9.0"}{% endif %}

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0"

[tool.poetry.group.linter.dependencies]{% if cookiecutter.code_formatter == 'black' %}
black = "^23.11"
isort = "^5.12.0"{% else %}
ruff = "^0.4.1"{% endif %}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0"{% if cookiecutter.use_notebooks == 'yes' %}
jupyterlab = "^3.5"{% endif %}

{% if cookiecutter.code_formatter == 'ruff' %}
[tool.ruff]
target-version = "py311"
line-length = 100
exclude = ["__init__.py"]
extend-exclude = ["notebooks/*"]

[tool.ruff.lint]
select = [
    "E",  # Pycodestyle errors
    "F",  # Pyflakes errors
    "UP", # pyupgrade checks
    "B",  # Bugbear checks
    "SIM",# Simplifcation checks
    "I",  # Import order checks (isort)
    "N"   # Naming convention checks
]
task-tags = ["TODO", "FIXME", "NOTE"]

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.project_slug }}"]

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"
{% endif %}

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
